import java.io.PrintWriter

import scala.annotation.tailrec

object Gen extends App {

  class LinearCongruentialGenerator(seed: Long, a: Long, c: Long, val m: Long) {
//    require(seed < m, "seed shouldn't be greater than modulus")
//    require(BigInt(m).gcd(BigInt(c)) == BigInt(1), "m and the offset c are relatively prime")
//    require(((m % 4) == 0) == (((a - 1) % 4) == 0), "a - 1 is divisible by 4 if m is divisible by 4")
//    require(factorize(m).distinct.forall(primeNumber => (a - 1) % primeNumber == 0), "a - 1 is divisible by all prime factors of m")
    //     2^31 => (1, 2147483648); a = 1 + 4*k

    private def factorize(x: Long): List[Long] = {
      @tailrec
      def helper(x: Long, a: Int = 2, list: List[Long] = Nil): List[Long] = a * a > x match {
        case false if x % a == 0 => helper(x / a, a, a :: list)
        case false => helper(x, a + 1, list)
        case true => x :: list
      }
      helper(x)
    }

    private def computeFunction(xPrevious: Long) = (a * xPrevious + c) % m

    private var previous = computeFunction(seed)

    def next: Long = {
      val xNext = computeFunction(previous)
      previous = xNext
      xNext
    }
  }

  class MultiplicativeCongruentialGenerator(seed: Long, a: Long, m: Long) extends LinearCongruentialGenerator(seed, a, c = 0L, m) {
//    require(BigInt(m).gcd(BigInt(a)) == BigInt(1), "m and the a are relatively prime")
    // L = m^2 - 1 => (a*)
    // 31 =>
    // 127 => (3, 6, 7, 12, 14, 23, 29, 39, 43, 45, 46, 48, 53, 55, 56, 57, 58, 65, 67, 78, 83, 85, 86, 91, 92, 93, 96, 97, 101, 106, 109, 110, 112, 114, 116, 118)
    // 8191 => (17, 31, 33, 34, 35, 57, 59, 62, 63, 66, 68, 70, 73, 78, 85, 113, 118, 124, 126, 132, 136, 139, 140, 141, 146, 147, 153, 156, 159, 170, 195, 203, 221, 226, 227, 228, 236, 237, 248, 252, 257, 264, 271, 272, 278, 282, 291, 292, 294, 295, 297, 305, 306, 307, 309, 312, 318, 340, 341, 351, 363, 373, 387, 390, 393, 397, 403, 406, 407, 409, 429, 437, 439, 442, 447, 452, 454, 456, 467, 471, 472, 473, 474, 479, 481, 483, 503, 504, 506, 509, 513, 514, 519, 528, 531, 542, 544, 549, 553, 556, 559, 560, 564, 567, 574, 579, 581, 582, 584, 588, 589, 590, 591, 593, 594, 601, 610, 613, 618, 619, 624, 631, 636, 649, 657, 667, 671, 679, 680, 682, 702, 703, 723, 726, 733, 741, 743, 746, 751, 765, 769, 774, 775, 777, 780, 783, 786, 794, 806, 807, 812, 818, 823, 825, 833, 835, 847, 858, 871, 874, 877, 878, 881, 884, 887, 889, 894, 904, 908, 912, 934, 935, 942, 944, 948, 949, 962, 966, 979, 992, 993, 1001, 1006, 1008, 1011, 1012, 1015, 1017, 1026, 1031, 1033, 1038, 1043, 1056, 1061, 1062, 1073, 1075, 1083, 1084, 1093, 1098, 1099, 1106, 1112, 1118, 1120, 1121, 1127, 1128, 1134, 1135, 1148, 1149, 1151, 1153, 1162, 1164, 1168, 1173, 1176, 1178, 1180, 1181, 1182, 1186, 1188, 1193, 1202, 1207, 1217, 1220, 1224, 1226, 1228, 1229, 1233, 1236, 1237, 1238, 1243, 1248, 1249, 1251, 1254, 1262, 1265, 1267, 1269, 1271, 1272, 1297, 1298, 1299, 1303, 1313, 1314, 1323, 1334, 1342, 1353, 1355, 1358, 1360, 1364, 1381, 1395, 1404, 1406, 1410, 1411, 1425, 1429, 1431, 1435, 1446, 1452, 1465, 1466, 1471, 1475, 1482, 1485, 1486, 1492, 1495, 1502, 1503, 1506, 1525, 1530, 1534, 1538, 1545, 1548, 1554, 1555, 1560, 1561, 1565, 1566, 1569, 1572, 1575, 1581, 1588, 1597, 1599, 1601, 1603, 1612, 1614, 1615, 1617, 1623, 1624, 1628, 1633, 1636, 1641, 1646, 1650, 1661, 1666, 1670, 1683, 1687, 1691, 1693, 1694, 1697, 1705, 1707, 1713, 1716, 1726, 1733, 1739, 1741, 1742, 1747, 1748, 1750, 1751, 1753, 1754, 1755, 1756, 1762, 1763, 1768, 1774, 1778, 1788, 1793, 1801, 1808, 1813, 1815, 1816, 1817, 1819, 1821, 1824, 1827, 1841, 1853, 1855, 1865, 1868, 1869, 1870, 1871, 1884, 1887, 1888, 1892, 1896, 1898, 1901, 1905, 1911, 1913, 1916, 1917, 1924, 1929, 1932, 1933, 1945, 1949, 1958, 1959, 1961, 1963, 1977, 1979, 1983, 1984, 1985, 1986, 1989, 2002, 2003, 2005, 2012, 2015, 2016, 2022, 2023, 2024, 2030, 2034, 2036, 2045, 2052, 2056, 2062, 2066, 2083, 2086, 2103, 2107, 2111, 2112, 2122, 2124, 2125, 2133, 2141, 2146, 2147, 2150, 2155, 2157, 2166, 2168, 2175, 2176, 2185, 2186, 2193, 2195, 2196, 2198, 2201, 2210, 2212, 2224, 2231, 2233, 2236, 2239, 2240, 2254, 2256, 2267, 2268, 2296, 2298, 2302, 2306, 2313, 2316, 2321, 2324, 2328, 2335, 2336, 2341, 2343, 2346, 2352, 2355, 2356, 2362, 2364, 2365, 2372, 2376, 2386, 2391, 2405, 2411, 2429, 2438, 2439, 2443, 2447, 2448, 2452, 2456, 2458, 2459, 2463, 2466, 2471, 2472, 2474, 2476, 2481, 2483, 2486, 2487, 2496, 2498, 2502, 2503, 2508, 2511, 2514, 2515, 2523, 2524, 2526, 2527, 2530, 2531, 2534, 2535, 2538, 2542, 2544, 2545, 2549, 2559, 2565, 2579, 2581, 2583, 2587, 2594, 2596, 2598, 2606, 2619, 2628, 2633, 2637, 2639, 2646, 2649, 2655, 2668, 2673, 2684, 2685, 2689, 2693, 2706, 2707, 2716, 2719, 2720, 2721, 2739, 2746, 2762, 2765, 2767, 2790, 2793, 2799, 2808, 2811, 2812, 2815, 2820, 2822, 2827, 2835, 2843, 2850, 2857, 2858, 2862, 2869, 2870, 2877, 2883, 2891, 2892, 2904, 2906, 2907, 2926, 2930, 2932, 2942, 2950, 2951, 2964, 2966, 2967, 2969, 2970, 2971, 2972, 2981, 2984, 2990, 2991, 3004, 3005, 3006, 3012, 3031, 3038, 3039, 3041, 3043, 3047, 3050, 3053, 3057, 3060, 3068, 3069, 3076, 3079, 3089, 3090, 3096, 3097, 3100, 3108, 3110, 3117, 3120, 3122, 3130, 3138, 3144, 3149, 3150, 3155, 3162, 3176, 3181, 3194, 3198, 3202, 3206, 3207, 3209, 3224, 3228, 3234, 3237, 3241, 3246, 3248, 3251, 3256, 3257, 3266, 3272, 3282, 3283, 3285, 3289, 3290, 3291, 3292, 3299, 3300, 3317, 3319, 3322, 3335, 3340, 3341, 3346, 3355, 3373, 3374, 3379, 3382, 3387, 3388, 3395, 3399, 3410, 3414, 3423, 3425, 3426, 3427, 3432, 3433, 3435, 3437, 3443, 3452, 3466, 3475, 3478, 3482, 3483, 3484, 3491, 3494, 3495, 3496, 3500, 3501, 3506, 3507, 3508, 3512, 3513, 3514, 3523, 3524, 3526, 3529, 3531, 3536, 3537, 3539, 3551, 3556, 3567, 3576, 3577, 3586, 3602, 3609, 3611, 3613, 3615, 3616, 3619, 3623, 3626, 3632, 3634, 3638, 3639, 3642, 3647, 3648, 3654, 3659, 3663, 3665, 3673, 3675, 3677, 3682, 3689, 3693, 3697, 3706, 3710, 3715, 3730, 3733, 3736, 3738, 3739, 3740, 3742, 3768, 3769, 3773, 3774, 3776, 3784, 3791, 3792, 3796, 3802, 3810, 3811, 3815, 3822, 3825, 3826, 3829, 3832, 3833, 3834, 3835, 3848, 3857, 3858, 3863, 3864, 3866, 3875, 3879, 3887, 3890, 3898, 3916, 3918, 3926, 3927, 3954, 3958, 3961, 3963, 3965, 3966, 3968, 3970, 3972, 3973, 3975, 3978, 3981, 3991, 3997, 3999, 4004, 4006, 4007, 4009, 4021, 4023, 4024, 4030, 4031, 4032, 4035, 4037, 4043, 4044, 4046, 4047, 4048, 4049, 4060, 4063, 4068, 4072, 4081, 4085, 4104, 4111, 4112, 4113, 4115, 4124, 4125, 4127, 4132, 4138, 4152, 4165, 4166, 4169, 4172, 4175, 4193, 4197, 4206, 4209, 4214, 4222, 4224, 4231, 4239, 4241, 4243, 4244, 4248, 4249, 4250, 4266, 4271, 4277, 4282, 4289, 4292, 4297, 4299, 4300, 4314, 4315, 4319, 4331, 4332, 4335, 4336, 4337, 4347, 4350, 4352, 4355, 4361, 4370, 4372, 4375, 4379, 4385, 4386, 4390, 4391, 4392, 4396, 4402, 4405, 4409, 4411, 4420, 4424, 4429, 4431, 4435, 4447, 4448, 4457, 4462, 4466, 4467, 4471, 4472, 4478, 4479, 4480, 4483, 4484, 4487, 4499, 4507, 4508, 4512, 4513, 4519, 4527, 4531, 4533, 4534, 4539, 4540, 4563, 4570, 4585, 4592, 4601, 4603, 4604, 4611, 4617, 4626, 4632, 4637, 4645, 4648, 4656, 4659, 4663, 4670, 4671, 4672, 4682, 4686, 4692, 4699, 4704, 4705, 4710, 4712, 4714, 4717, 4720, 4721, 4724, 4727, 4728, 4729, 4730, 4731, 4745, 4747, 4752, 4757, 4773, 4782, 4786, 4793, 4808, 4810, 4811, 4813, 4822, 4827, 4828, 4831, 4833, 4837, 4838, 4843, 4847, 4855, 4858, 4868, 4873, 4876, 4878, 4880, 4883, 4886, 4894, 4895, 4896, 4897, 4903, 4904, 4907, 4912, 4916, 4918, 4926, 4932, 4937, 4939, 4941, 4942, 4944, 4948, 4949, 4962, 4966, 4969, 4971, 4972, 4973, 4974, 4977, 4992, 4996, 5002, 5003, 5005, 5006, 5009, 5016, 5022, 5023, 5028, 5030, 5039, 5048, 5051, 5052, 5054, 5060, 5062, 5068, 5070, 5075, 5076, 5077, 5084, 5085, 5087, 5088, 5090, 5097, 5098, 5103, 5107, 5118, 5130, 5137, 5147, 5149, 5151, 5158, 5162, 5166, 5169, 5173, 5174, 5183, 5188, 5192, 5193, 5211, 5212, 5215, 5238, 5252, 5256, 5263, 5266, 5267, 5273, 5274, 5278, 5291, 5292, 5298, 5301, 5305, 5310, 5315, 5317, 5319, 5325, 5327, 5331, 5336, 5337, 5339, 5346, 5347, 5351, 5353, 5357, 5359, 5361, 5363, 5368, 5370, 5375, 5378, 5385, 5386, 5387, 5389, 5405, 5412, 5414, 5415, 5420, 5432, 5438, 5440, 5442, 5449, 5455, 5456, 5465, 5478, 5479, 5492, 5495, 5503, 5509, 5513, 5517, 5524, 5534, 5537, 5541, 5549, 5557, 5571, 5579, 5580, 5581, 5586, 5591, 5598, 5611, 5615, 5616, 5617, 5619, 5622, 5624, 5635, 5640, 5644, 5670, 5686, 5699, 5700, 5709, 5714, 5716, 5721, 5724, 5737, 5738, 5740, 5741, 5745, 5754, 5755, 5763, 5766, 5773, 5782, 5784, 5785, 5789, 5793, 5795, 5807, 5808, 5809, 5812, 5813, 5814, 5817, 5833, 5837, 5841, 5843, 5846, 5849, 5852, 5857, 5860, 5861, 5864, 5865, 5871, 5879, 5884, 5900, 5901, 5902, 5903, 5905, 5907, 5913, 5915, 5919, 5925, 5927, 5932, 5933, 5938, 5940, 5942, 5944, 5947, 5953, 5957, 5962, 5965, 5968, 5980, 5982, 5991, 6001, 6003, 6010, 6012, 6013, 6024, 6027, 6033, 6035, 6039, 6059, 6062, 6071, 6076, 6077, 6078, 6082, 6083, 6086, 6091, 6095, 6099, 6100, 6103, 6106, 6107, 6111, 6117, 6119, 6120, 6127, 6136, 6138, 6151, 6152, 6153, 6159, 6178, 6180, 6183, 6192, 6194, 6200, 6211, 6215, 6216, 6217, 6220, 6231, 6234, 6244, 6245, 6253, 6255, 6260, 6261, 6263, 6264, 6269, 6273, 6276, 6283, 6285, 6288, 6291, 6298, 6300, 6301, 6310, 6311, 6313, 6319, 6324, 6329, 6331, 6335, 6337, 6339, 6345, 6349, 6352, 6355, 6359, 6362, 6365, 6377, 6401, 6404, 6412, 6414, 6418, 6425, 6427, 6431, 6445, 6448, 6454, 6456, 6459, 6460, 6461, 6468, 6469, 6474, 6482, 6492, 6496, 6501, 6502, 6509, 6511, 6512, 6514, 6517, 6519, 6523, 6532, 6537, 6543, 6544, 6547, 6549, 6564, 6565, 6566, 6570, 6578, 6580, 6581, 6582, 6584, 6597, 6598, 6600, 6607, 6611, 6615, 6621, 6633, 6639, 6644, 6649, 6664, 6669, 6671, 6680, 6682, 6687, 6692, 6701, 6703, 6710, 6727, 6729, 6732, 6741, 6746, 6748, 6753, 6754, 6755, 6758, 6759, 6761, 6765, 6769, 6771, 6772, 6774, 6775, 6776, 6777, 6783, 6788, 6789, 6790, 6798, 6803, 6807, 6820, 6823, 6828, 6835, 6843, 6846, 6847, 6850, 6852, 6854, 6864, 6866, 6870, 6874, 6885, 6886, 6891, 6901, 6903, 6904, 6905, 6913, 6932, 6945, 6950, 6956, 6964, 6966, 6968, 6973, 6977, 6982, 6988, 6990, 6993, 6999, 7000, 7002, 7004, 7012, 7014, 7016, 7017, 7020, 7026, 7028, 7031, 7035, 7046, 7047, 7048, 7052, 7053, 7055, 7058, 7059, 7062, 7069, 7072, 7074, 7078, 7091, 7096, 7097, 7102, 7109, 7112, 7113, 7115, 7125, 7131, 7134, 7137, 7141, 7143, 7145, 7147, 7149, 7151, 7152, 7154, 7155, 7159, 7171, 7172, 7175, 7201, 7203, 7204, 7211, 7218, 7222, 7223, 7226, 7227, 7230, 7232, 7237, 7238, 7241, 7246, 7252, 7255, 7260, 7261, 7263, 7264, 7265, 7268, 7270, 7273, 7275, 7276, 7278, 7294, 7296, 7309, 7318, 7325, 7326, 7330, 7346, 7350, 7351, 7354, 7357, 7364, 7367, 7369, 7370, 7378, 7386, 7394, 7399, 7401, 7403, 7406, 7412, 7415, 7419, 7431, 7439, 7446, 7447, 7459, 7460, 7466, 7472, 7473, 7476, 7478, 7480, 7481, 7483, 7484, 7487, 7490, 7497, 7499, 7507, 7513, 7517, 7519, 7536, 7538, 7541, 7546, 7547, 7548, 7552, 7568, 7582, 7584, 7592, 7595, 7604, 7611, 7613, 7619, 7620, 7622, 7623, 7630, 7641, 7644, 7650, 7652, 7653, 7658, 7661, 7664, 7666, 7667, 7669, 7670, 7671, 7673, 7675, 7681, 7683, 7689, 7697, 7707, 7709, 7714, 7721, 7723, 7726, 7727, 7728, 7733, 7750, 7751, 7758, 7771, 7773, 7774, 7779, 7780, 7795, 7796, 7797, 7803, 7805, 7811, 7815, 7825, 7832, 7833, 7837, 7839, 7844, 7845, 7849, 7852, 7855, 7866, 7869, 7893, 7901, 7902, 7907, 7908, 7916, 7922, 7926, 7929, 7930, 7931, 7933, 7936, 7937, 7940, 7944, 7946, 7949, 7950, 7956, 7957, 7959, 7962, 7971, 7982, 7985, 7993, 7994, 7997, 7998, 8001, 8003, 8005, 8008, 8012, 8014, 8015, 8018, 8020, 8023, 8030, 8042, 8048, 8049, 8060, 8061, 8070, 8074, 8075, 8081, 8086, 8088, 8092, 8094, 8096, 8097, 8098, 8103, 8107, 8120, 8126, 8133, 8136, 8144, 8147, 8149, 8162, 8169, 8170, 8180)
    // 131071 => (43165, 66284, 29223, 119858, 29803, 76704)
    // 524287 => (283741, 358899, 37698, 127574, 155411, 157781)


    def isAPrimitiveRootModuloM: Boolean = {
      def calculate(index: Long): Set[Long] = {
        Set(BigInt(a).modPow(index, m).toLong)
      }
      @tailrec
      def helper(index: Long, acc: Set[Long]): Set[Long] = {
        if (index < 1) acc
        else {
          helper(index - 1L, acc ++ calculate(index))
        }
      }
      (1 to (m - 1).toInt).par
        .map(index => calculate(index))
        .reduce((a, b) => a ++ b)
        .size == m - 1L
    }
  }

  class CombinedCongruentialGenerators(firstLinearCongruentialGenerator: LinearCongruentialGenerator,
                                       secondLinearCongruentialGenerator: LinearCongruentialGenerator) {
    val firstRandomNumbers = Array.fill(secondLinearCongruentialGenerator.m.toInt)(firstLinearCongruentialGenerator.next)

    def distributeUniformly(x: Double): Double = {
      if (x > 0) x / firstLinearCongruentialGenerator.m
      else (firstLinearCongruentialGenerator.m - 1).toDouble / firstLinearCongruentialGenerator.m
    }

    def next: Double = {
      val x2 = secondLinearCongruentialGenerator.next
      val result = firstRandomNumbers(x2.toInt)
      val xNew = result % firstLinearCongruentialGenerator.m
      distributeUniformly(xNew)
    }
  }

  val gen1 = new LinearCongruentialGenerator(1L, 69069L, 1L, 4294967296L)
  val gen2 = new MultiplicativeCongruentialGenerator(1L, 884L, 8191L)

  val combined = new CombinedCongruentialGenerators(gen1, gen2)

  val writer = new PrintWriter("numbers.txt", "UTF-8")
  (0 to 100).foreach{_ =>
    writer.write(String.format(combined.next.toString + "%n"))
  }
  writer.close()

}
